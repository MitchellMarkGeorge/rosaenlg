-
  util.expected = [
    '<t>',
      '<singular>',
        '<li>WITH REF BEFORE : REF_F / sa largeur / son poids</li>',
        '<li>WITHOUT REF BEFORE : la largeur de REF_F / son poids</li>',
        '<li>2 ONES SUCCESSIVE : la largeur de REF_F / sa largeur</li>',
      '</singular>',
      '<plural>',
        '<li>2 ONES SUCCESSIVE : la largeur des REF_F / leur largeur</li>',
      '</plural>',

      '<newtest>',
        '<li>les boucles d\'oreille / leur largeur / le bijou / sa largeur</li>',
      '</newtest>',

    '</t>'
  ].join('');


- var PRODUIT = {};

- PRODUIT.ref = 'produit_ref';
mixin produit_ref(obj, params)
  | REF_F
  - setRefGender(obj, 'F');

- PRODUIT.refexpr = 'produit_refexpr';
mixin produit_refexpr(obj, params)
  synz
    syn
      | RE_M1
      - setRefGender(PRODUIT, 'M');
    syn
      | RE_M2
      - setRefGender(PRODUIT, 'M');
    syn
      | RE_F1
      - setRefGender(PRODUIT, 'F');
    syn
      | RE_F2
      - setRefGender(PRODUIT, 'F');

//------------

-
  var BIJOU = {};
  BIJOU.ref = 'bijou_ref';
  BIJOU.refexpr = 'bijou_refexpr';
mixin bijou_ref(obj, params)
  | les boucles d'oreille
  - setRefNumber(BIJOU, 'P');

mixin bijou_refexpr(obj, params)
  | le bijou
  - setRefNumber(BIJOU, 'S');

t
  singular
    - setRefNumber(PRODUIT, 'S');
    li WITH REF BEFORE : #[+value(PRODUIT)] / #[+thirdPossession(PRODUIT, 'largeur')] / #[+thirdPossession(PRODUIT, 'poids')]
    - resetRep(PRODUIT)
    li WITHOUT REF BEFORE : #[+thirdPossession(PRODUIT, 'largeur')] / #[+thirdPossession(PRODUIT, 'poids')]
    - resetRep(PRODUIT)
    li 2 ONES SUCCESSIVE : #[+thirdPossession(PRODUIT, 'largeur')] / #[+thirdPossession(PRODUIT, 'largeur')]
    - resetRep(PRODUIT)

  plural
    - setRefNumber(PRODUIT, 'P');
    li 2 ONES SUCCESSIVE : #[+thirdPossession(PRODUIT, 'largeur')] / #[+thirdPossession(PRODUIT, 'largeur')]
    - resetRep(PRODUIT)

  newtest
    li
      | #[+value(BIJOU)] / #[+thirdPossession(BIJOU, 'largeur')] / #[+value(BIJOU)] / #[+thirdPossession(BIJOU, 'largeur')]
