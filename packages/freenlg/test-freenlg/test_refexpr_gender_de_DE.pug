
-
  util.expected = [
    '<t>',
      '<l>REFEXPR: das Handy N / REF: das hübsche Telefon N / AUTO: die Gurke F / das Telefon N / das Handy N</l>',
      '<l>AUTO: das hübsche Telefon N / die Gurke F / das Telefon N</l>',
    '</t>'
  ].join('');


- var PRODUKT = {};

- PRODUKT.ref = 'produkt_ref';
mixin produkt_ref(obj, params)
  | das hübsche Telefon
  - setRefGender(PRODUKT, 'N');

- PRODUKT.refexpr = 'produkt_refexpr'
mixin produkt_refexpr(obj, params)
  synz {mode:'sequence'}
    syn
      | das Handy
      - setRefGender(PRODUKT, 'N');
    syn
      | die Gurke
      - setRefGender(PRODUKT, 'F');
    syn
      | das Telefon
      - setRefGender(PRODUKT, 'N');

mixin valueDebugGender(obj, params)
  | #[+value(obj, params)] #{getRefGender(obj)}

t
  l
    itemz {separator: '/'}
      item 
        | REFEXPR : #[+valueDebugGender(PRODUKT, {REPRESENTANT: 'refexpr'})]
      item
        | REF : #[+valueDebugGender(PRODUKT, {REPRESENTANT: 'ref'})]
      item 
        | AUTO : #[+valueDebugGender(PRODUKT)]
      item
        | #[+valueDebugGender(PRODUKT)]
      item
        | #[+valueDebugGender(PRODUKT)]

  - resetRep(PRODUKT)
  l AUTO :
    eachz i in [0,1,2] with {separator: '/'}
      | #[+valueDebugGender(PRODUKT)]
