
-
  function printObj(before, obj) {
    console.log(before + ' ' + JSON.stringify(obj).substring(0, 20) );
  }

mixin eatSpace
  |
  | EATSPACE
  |

mixin uppercaseWords(str)
  if str!=null && str.length > 0
    if util.isEvaluatingEmpty==true
      | SOME_WORDS
    else
      |
      | #{str.replace(/\b\w/g, l => l.toUpperCase())}
      |

//-
  function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  }

-
  function formatNumber(val) {
    var valAsNumber = parseFloat(val);
    //console.log(valAsNumber);
    return valAsNumber;
  }

mixin valWithUnit(val, unit)
  if val!=null
    if util.isEvaluatingEmpty==true
      | SOME_VAL_UNIT
    else
    | #{formatNumber(val)} #{unit}

-
  function hasFlag(params, flag) {
    return util.helper.hasFlag(params, flag);
  }

-
  function getFlagValue(params, flag) {
    return util.helper.getFlagValue(params, flag);
  }

-
  function logParams(params) {
    console.log('params: ' + JSON.stringify(params));
  }

-
  function getAnonymous(gender, number) {
    // console.log("getAnonymous");
    var obj = {'isAnonymous': true};
    setRefGender(obj, gender);
    setRefNumber(obj, number);
    return obj;
  }


-
  function dumpHasSaid() {
    console.log(JSON.stringify(util.has_said));
  }

-
  function recordSaid(key) {
    util.helper.recordSaid(util, key);
  }

-
  function deleteSaid(key) {
    util.helper.deleteSaid(util, key);
  }

- 
  function hasSaid(key) {
    return util.helper.hasSaid(util, key);
  }

-
  function registerSubst(root, gender, number) {
    setRefGender(root, gender);
    setRefNumber(root, number);
  }


- 
  function valueToSorP(val) {
    return val > 1 ? 'P' : 'S';
  }

-
  function getMorF(table, obj) {
    var gender = getRefGender(obj);
    if (gender==null || gender=='M') {
      return table[0];
    } else if (gender=='F') {
      return table[1];
    }
    return null;
  }

-
  function getSorP(table, obj) {
    var number = getRefNumber(obj);
    if (number==null || number=='S') {
      return table[0];
    } else if (number=='P') {
      return table[1];
    }
    return null;
  }


mixin toHtmlList(obj)
  ul
    each val, index in obj
      if val!=null && typeof(val) == "object"
        li #{index}: #[+toHtmlList(val)]
      else
        li= index + ': ' + val



mixin monthName(date)
  - var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  | #{monthNames[date.getMonth()]}

-
  function protectString(string) {
    return util.helper.protectString(string);
  }
