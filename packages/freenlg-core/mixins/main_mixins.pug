
//-------- foreach

mixin foreach(elts, mixinFct, asm, params)
  - util.asmManager.foreach(elts, mixinFct, asm, params);


//-------- value

mixin value(obj, params)
  - util.valueManager.value(obj, params);


//-------- filter

//- unfiltered is in util.lastUnfiltered - for debug
mixin filter(mixinName, params)
  -
    let html_before = util.spy.getPugHtml();
    util.spy.getPugMixins()[mixinName](params);
    let produced = util.spy.getPugHtml().substring(html_before.length);
    util.spy.setPugHtml( html_before + util.filterManager.filter(produced, util.filterManagerSteps.MIXIN) );

    // unfiltered content for debug
    util.lastUnfiltered = produced

//-------- syn

mixin syn(...items)
  |
  |
  - util.synManager.simpleSyn(items);
  |
  |

-
  function syn_fct(items) {
    return util.synManager.synFct(items);
  }

//-------- adjectives

//- test only: mising languages, irregulars etc.
mixin agreeAdj(adjective, subject, params)
  - util.adjectiveManager.agreeAdj(adjective, subject, params);

//-------- substantive

mixin substantive(subst, subject)
  | #{util.substantiveManager.getSubstantive(subst, subject)}


//-------- possessive

mixin recipientPossession(owned)
  - util.possessiveManager.recipientPossession(owned);


mixin thirdPossession(owner, owned, params)
  - util.possessiveManager.thirdPossession(owner, owned, params);

