
-
  function dumpHasSaid() {
    util.saidManager.dumpHasSaid();
  }

-
  function recordSaid(key) {
    util.saidManager.recordSaid(key);
  }

-
  function deleteSaid(key) {
    util.saidManager.deleteSaid(key);
  }

- 
  function hasSaid(key) {
    return util.saidManager.hasSaid(key);
  }

//--------------

-
  function hasFlag(params, flag) {
    return util.helper.hasFlag(params, flag);
  }

-
  function getFlagValue(params, flag) {
    return util.helper.getFlagValue(params, flag);
  }

//--------------

-
  function getAnonymous(gender, number) {
    return util.genderNumberManager.getAnonymous(gender, number);
  }

-
  function registerSubst(root, gender, number) {
    util.genderNumberManager.registerSubst(root, gender, number);
  }

//--------------

-
  function protectString(string) {
    return util.helper.protectString(string);
  }

//--------------





-
  function printObj(before, obj) {
    console.log(before + ' ' + JSON.stringify(obj).substring(0, 20) );
  }

mixin flushBuffer
  |

mixin eatSpace
  |
  | EATSPACE
  |

mixin uppercaseWords(str)
  if str!=null && str.length > 0
    if util.isEvaluatingEmpty==true
      | SOME_WORDS
    else
      |
      | #{str.replace(/\b\w/g, l => l.toUpperCase())}
      |


mixin valWithUnit(val, unit)
  if val!=null
    if util.isEvaluatingEmpty==true
      | SOME_VAL_UNIT
    else
      - var valAsNumber = parseFloat(val);
      | #{valAsNumber} #{unit}

-
  function logParams(params) {
    console.log('params: ' + JSON.stringify(params));
  }



- 
  function valueToSorP(val) {
    return val > 1 ? 'P' : 'S';
  }

-
  function getMorF(table, obj) {
    var gender = getRefGender(obj);
    if (gender==null || gender=='M') {
      return table[0];
    } else if (gender=='F') {
      return table[1];
    }
    return null;
  }

-
  function getSorP(table, obj) {
    var number = getRefNumber(obj);
    if (number==null || number=='S') {
      return table[0];
    } else if (number=='P') {
      return table[1];
    }
    return null;
  }


mixin toHtmlList(obj)
  ul
    each val, index in obj
      if val!=null && typeof(val) == "object"
        li #{index}: #[+toHtmlList(val)]
      else
        li= index + ': ' + val



mixin monthName(date)
  -
    var monthNames =
      {
        "en_US": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        "fr_FR": ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"]
      };
  | #{monthNames[util.language][date.getMonth()]}
