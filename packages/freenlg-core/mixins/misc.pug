
-
  function dumpHasSaid() {
    util.saidManager.dumpHasSaid();
  }

-
  function recordSaid(key) {
    util.saidManager.recordSaid(key);
  }

-
  function deleteSaid(key) {
    util.saidManager.deleteSaid(key);
  }

- 
  function hasSaid(key) {
    return util.saidManager.hasSaid(key);
  }

//--------------

-
  function hasFlag(params, flag) {
    return util.helper.hasFlag(params, flag);
  }

-
  function getFlagValue(params, flag) {
    return util.helper.getFlagValue(params, flag);
  }

//--------------

-
  function getAnonymous(gender, number) {
    return util.genderNumberManager.getAnonymous(gender, number);
  }
  function getAnonMS() {
    return util.genderNumberManager.getAnonMS();
  }
  function getAnonMP() {
    return util.genderNumberManager.getAnonMP();
  }
  function getAnonFS() {
    return util.genderNumberManager.getAnonFS();
  }
  function getAnonFP() {
    return util.genderNumberManager.getAnonFP();
  }

-
  function registerSubst(root, gender, number) {
    util.genderNumberManager.registerSubst(root, gender, number);
  }

//--------------

-
  function protectString(string) {
    return util.helper.protectString(string);
  }

//--------------

-
  function getMorF(table, obj) {
    return util.helper.getMorF(table, obj);
  }

-
  function getSorP(table, obj) {
    return util.helper.getSorP(table, obj);
  }



-
  function printObj(before, obj) {
    console.log(before + ' ' + JSON.stringify(obj).substring(0, 20) );
  }

mixin flushBuffer
  |

mixin eatSpace
  |
  | EATSPACE
  |

mixin uppercaseWords(str)
  if str!=null && str.length > 0
    if util.isEvaluatingEmpty==true
      | SOME_WORDS
    else
      |
      | #{str.replace(/\b\w/g, l => l.toUpperCase())}
      |

-
  function logParams(params) {
    console.log('params: ' + JSON.stringify(params));
  }



- 
  function valueToSorP(val) {
    return val > 1 ? 'P' : 'S';
  }


mixin toHtmlList(obj)
  ul
    each val, index in obj
      if val!=null && typeof(val) == "object"
        li #{index}: #[+toHtmlList(val)]
      else
        li= index + ': ' + val

