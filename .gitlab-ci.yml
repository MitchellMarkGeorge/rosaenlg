
stages:
  - build
  - doc
  - publish

build:
  stage: build
  image: sandrokeil/typescript
  cache:
    paths:
      - packages/*/node_modules
    untracked: true
  script:
    - npm install -g pegjs
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
    - lerna run build
    - lerna run test
  artifacts:
    paths:
      - packages/*/resources_pub
      - packages/*/dist
    expire_in: 1 day

doc:
  stage: doc
  image: asciidoctor/docker-asciidoctor
  before_script:
    - apk add --update nodejs nodejs-npm yarn alpine-sdk
    - npm install --global gulp-cli
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
  script:
    - lerna run doc
  artifacts:
    paths:
      - packages/*/doc_output
    # change to less when published
    expire_in: 1 week


publish_doc:
  stage: publish
  image: sandrokeil/typescript
  script:
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
    - lerna run doc:publish
  only:
    - master
  when: manual

publish_npm:
  stage: publish
  image: sandrokeil/typescript
  script:
    - npm install -g lerna
    - npm install can-npm-publish
    #- printenv NPM_TOKEN
    #- echo $NPM_TOKEN
    #- echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
    #- cat .npmrc
    #- npm config list
    #- npm whoami
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - npm config set always-auth=true
    - npm config set email=ludan.stoeckle@freenlg.org
    - npm config list
    - npm whoami
    #- lerna publish
    # npm ; tries to publish anything, continues when fails
    - lerna exec --concurrency 1 --no-bail --loglevel=verbose -- "can-npm-publish && npm publish"
  only:
    - master
  when: manual
