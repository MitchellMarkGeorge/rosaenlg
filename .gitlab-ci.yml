stages:
  - code_build
  - unit_test
  - sonar_check
  - code_publish
  - docker_build
  - docker_test
  - docker_release

# stuff for some steps only

.template_for_docker: &template_for_docker
  image: docker:git
  services:
    - docker:dind

.docker_repo_login: &docker_repo_login
  - echo "$CI_BUILD_TOKEN" | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com

# variables etc.

variables:
  ROSAENLG_VERSION: 1.14.3
  DOCKER_REGISTRY: registry.gitlab.com/rosaenlg-projects/rosaenlg
  DOCKER_CLI_ROOT: ${DOCKER_REGISTRY}/cli
  DOCKER_SERVER_ROOT: ${DOCKER_REGISTRY}/server
  DOCKER_TEST_TAG: test_${CI_COMMIT_REF_SLUG}
  # sonar default stuff
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task


# code build and publish

build_the_code:
  stage: code_build
  image: node
  cache:
    paths:
      - node_modules/
      - packages/*/node_modules
    untracked: true
  script:
    - npm -v
    - node --version
    - npm install -g pegjs
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
    - rm -f packages/rosaenlg/dist/rollup/*.js
    - lerna run build
  artifacts:
    paths:
      - packages/*/resources_pub
      - packages/*/dist
      - packages/
    expire_in: 1 day
  # except:
  #   - master

test_the_code:
  stage: unit_test
  image: node
  cache:
    paths:
      - node_modules/
      - packages/*/node_modules
    untracked: true
  script:
    - npm -v
    - node --version
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
    - lerna run test
  artifacts:
    paths:
      - packages/*/resources_pub
      - packages/*/dist
      - packages/*/coverage
      - packages/
    expire_in: 1 day
  # except:
  #   - master

sonarcloud_check:
  stage: sonar_check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  # except:
  #   - master

publish_on_npm:
  stage: code_publish
  image: node
  script:
    - npm install -g lerna
    # - npm install -g snyk
    # - snyk auth $SNYK_TOKEN
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
    - npm config set always-auth=true
    - npm config set email=ludan.stoeckle@rosaenlg.org
    - npm config list
    - npm whoami
    # - git diff
    - git config core.filemode false # because rosaenlg-cli/index.js is now executable
    # - git diff
    - lerna publish from-package --yes
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  # when: manual

publish_browser_ide_s3_and_swaggers:
  stage: code_publish
  image: node
  cache:
    paths:
      - node_modules/
      - packages/*/node_modules
    untracked: true
  script:
    - npm install -g lerna
    - lerna bootstrap --concurrency 8
    - node node_modules/gulp/bin/gulp.js --gulpfile packages/browser-ide-demo/gulpfile.js s3
    - node node_modules/gulp/bin/gulp.js --gulpfile packages/rosaenlg-node-server/gulpfile.js s3
    - node node_modules/gulp/bin/gulp.js --gulpfile packages/rosaenlg-lambda/gulpfile.js s3
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  # when: manual


# docker for CLI

docker_build_cli:
  stage: docker_build
  <<: *template_for_docker
  before_script:
    - *docker_repo_login
  script:
    - cd packages/rosaenlg-cli/docker/
    - docker build --build-arg ROSAENLG_VERSION=$ROSAENLG_VERSION --pull -t $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG .
    - docker push $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG
  except:
    - master

docker_test_cli:
  stage: docker_test
  <<: *template_for_docker
  script:
    - cd packages/rosaenlg-cli/docker/
    - docker pull $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG
    - chmod +x ./test.sh
    - /bin/sh ./test.sh $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG
  except:
    - master

docker_release_cli:
  stage: docker_release
  <<: *template_for_docker
  before_script:
    - *docker_repo_login
  script:
    - docker pull $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG
    # tag and push latest
    - docker tag $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG $DOCKER_CLI_ROOT:latest
    - docker push $DOCKER_CLI_ROOT:latest
    # tag and push version
    - docker tag $DOCKER_CLI_ROOT:$DOCKER_TEST_TAG $DOCKER_CLI_ROOT:$ROSAENLG_VERSION
    - docker push $DOCKER_CLI_ROOT:$ROSAENLG_VERSION
  only:
   - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  # when: manual


# docker for server

docker_build_server:
  stage: docker_build
  <<: *template_for_docker
  before_script:
    - *docker_repo_login
  script:
    - cd packages/rosaenlg-node-server/docker/
    - docker build --build-arg ROSAENLG_VERSION=$ROSAENLG_VERSION --pull -t $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG .
    - docker push $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG
  except:
    - master

docker_test_server:
  stage: docker_test
  <<: *template_for_docker
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
  script:
    - cd packages/rosaenlg-node-server/docker/
    - docker pull $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG
    - docker run -d -p 5000:5000 $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG
    - sleep 20
    - ps -ef
    - chmod +x ./test.sh
    - /bin/sh ./test.sh
  except:
    - master

docker_release_server:
  stage: docker_release
  <<: *template_for_docker
  before_script:
    - *docker_repo_login
  script:
    - docker pull $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG
    # tag and push latest
    - docker tag $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG $DOCKER_SERVER_ROOT:latest
    - docker push $DOCKER_SERVER_ROOT:latest
    # tag and push version
    - docker tag $DOCKER_SERVER_ROOT:$DOCKER_TEST_TAG $DOCKER_SERVER_ROOT:$ROSAENLG_VERSION
    - docker push $DOCKER_SERVER_ROOT:$ROSAENLG_VERSION
  only:
   - /^v[0-9]+\.[0-9]+\.[0-9]+$/
  # when: manual

